/*
    futils - utility library
    Copyright (c) 2021-2025 on-keyday (https://github.com/on-keyday)
    Released under the MIT license
    https://opensource.org/licenses/mit-license.php
*/

#pragma once
#include <freestd/freestd_macro.h>
#include <freestd/stdint.h>

namespace futils::freestd {
    using ::int16_t;
    using ::int32_t;
    using ::int64_t;
    using ::int8_t;
    using ::intptr_t;
    using ::uint16_t;
    using ::uint32_t;
    using ::uint64_t;
    using ::uint8_t;
    using ::uintptr_t;

    static_assert(sizeof(uint8_t) == 1, "uint8_t size is not 1");
    static_assert(sizeof(uint16_t) == 2, "uint16_t size is not 2");
    static_assert(sizeof(uint32_t) == 4, "uint32_t size is not 4");
    static_assert(sizeof(uint64_t) == 8, "uint64_t size is not 8");

}  // namespace futils::freestd

#ifdef FUTILS_FREESTD_STD_CPP
namespace std {
    using namespace futils::freestd;
}
#endif

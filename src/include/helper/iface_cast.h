/*
    utils - utility library
    Copyright (c) 2021 on-keyday (https://github.com/on-keyday)
    Released under the MIT license
    https://opensource.org/licenses/mit-license.php
*/


// iface_cast - interface cast for class generated by ifacegen
#pragma once

#include <typeinfo>

namespace utils {
    namespace helper {
        namespace internal {

            template <class T, class In>
            struct iface_caster {
                static T cast(In& in) {
                    auto res = in.template type_assert<T>();
                    if (!res) {
                        throw std::bad_cast();
                    }
                    return *res;
                }
            };

            template <class T, class In>
            struct iface_caster<T*, In> {
                static T* cast(In& in) {
                    return in.template type_assert<T>();
                }
            };

        }  // namespace internal

        template <class T, class In>
        T iface_cast(In& in) {
            return internal::iface_caster<T, In>::cast(in);
        }

    }  // namespace helper
}  // namespace utils

/*
    futils - utility library
    Copyright (c) 2021-2024 on-keyday (https://github.com/on-keyday)
    Released under the MIT license
    https://opensource.org/licenses/mit-license.php
*/


func print(value :string) {
    __builtin_print(value)
    return value
}

func callback(object) {
    return object("WHY!\n")
}

func begin_thread(func_0){
    return __builtin_thread(func_0)
}

func wait_thread(obj) {
    return __builtin_join(obj)
}

let obj :[2]int = print


func main() -> int {
    for {
        let value :string = 20
        if value == 20  {
            value = "hello world"
        }

        value = print(value+"\n") + value + "!\n"

        print(value)

        if let omega = value; omega {
            omega = print(print("called ")+"!\n")
            print(omega)
        }

        func DO(value){
            print(value)
        }
        print(callback(DO))
        return 0
    }
}

main()

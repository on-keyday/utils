#    utils - utility library
#    Copyright (c) 2021 on-keyday (https://github.com/on-keyday)
#    Released under the MIT license
#    https://opensource.org/licenses/mit-license.php

# test - ifacegen test

package test # `package` will be namespace

# iface
# const identifier(param type) rettype
# convert to c++
# rettype identifier(type param) const 
# convert to golang
# identifier(param type) rettype

# bug: type_assert, raw__ and type__ is implicit used if `decltype` appered
#      so type_assert, raw__ and type__ function is not usable

interface Hey {
    hey(name &const std::string) std::string 
    hey(name *const char) std::string
    const is_boy() bool = false # set default value. if not set, 
                                # default is below 
                                # value type: type{}
                                # pointer type: nullptr
                                # reference type: throw std::bad_function_call()
    decltype() type # `decltype` is special value that generate type_assert template function 
                    # ignore return type and argument
}

interface Stringer {
    String() std::string = panic # `panic` is special value that generate throw std::bad_function_call()
}

alias WriteResult std::pair<size_t,bool>

interface Writer {
    Write(ptr *const char,size size_t) size_t
}
